# สารบัญเนื้อหาสรุป
1. การเข้าถึง address ด้วย &
2. %p
3. Array
4. Pointer
5. ตัวแปร global & local.
6. การตั้งชื่อตัวแปร
7. ประเภทและขนาดของข้อมูล
8. ค่าคงที่ตัวอักษร
9. puts
10. การรับ input
11. Arrithmatic operators
12. ++n, n++
13. BITWISE operators
14. if-else
15. while loop
16. for loop
17. Some basic code
18. การใช้คำสั่ง "git log --all --decorate --oneline --graph"
19. LAB สัปดาห์ที่ 1
20. LAB สัปดาห์ที่ 2
21. LAB สัปดาห์ที่ 3
22. LAB สัปดาห์ที่ 4
23. LAB สัปดาห์ที่ 5
24. LAB สัปดาห์ที่ 6

# เนื้อหาสรุปในสัปดาห์ก่อนการสอบกลางภาค ภาคปลาย 

## การเข้าถึง address ด้วย &  
###### คือตัวที่ไว้อยู่หน้าตัวแปรซึ่งทำหน้าที่ไปเอา address ของตัวแปรนั้นมา ใช้ใน scanf ด้วยตัวอย่างในชีทคาบบรรยาย

## %p
###### คือการ print เลขจำนวนเต็มในเลขฐาน16

## Array 
###### array คือการเก็บข้อมูลชนิดเดียวกันในตัวแปรเดียวกันได้หลายตัวคล้าย list ใน python โดยต้อง initializer ประกาศขนาดไว้กับ data ก่อนว่ามีขนาดเท่าไหร่
###### ex. กำหนดไว้ 5 ตัว สามารถเก็บค่าได้ 4-5 ตัว เพราะบางครั้งอาจเก็บค่าบางอย่างไว้จึงเก็บได้ไม่ครบ 5 ตัว ดังนั้นควรกำหนดพื้นที่เผื่อเอาไว้
###### การเข้าถึง array : กำหนดให้ data คือ ตัวแปร array และมีสมาชิกอยู่ 5 ตัว ซึ่งเราอยากเข้าถึงสมาชิกตัวที่ 4 จะใช้ : data[4] 
###### สามารถประกาศตัวแปรได้ : char data[5] : ประกาศให้ตัวแปร data เป็นชนิด char array มีที่เก็บค่าของตัวแปร 5 ที่

## pointer 
###### int x = 100;
###### int *ptr = &x;
###### int *arrptr = data;
###### ptr = &x เป็นการเก็บค่าใน address นั้นๆ
###### ดูตัวอย่างเพิ่มเติมได้ในชีทคาบบรรยาย

## ตัวแปร global และ local
###### global เป็นตัวแปรที่สามารถอยู่ได้ตลอดการทำงานของโปรแกรม ถ้าไม่กำหนดค่าให้ในตอนแรกจะมีค่า = 0
###### local เป็นตัวแปรที่สามารถอยู่ได้เพียงการทำงานใน function นั้นเท่านั้น ควรกำหนดค่าเริ่มต้นให้ด้วย

## การตั้งชื่อตัวแปร
###### เป็นอักษรและตัวเลข
###### ใช้ _ ได้
###### snake case : คั่นแต่ละคำด้วย _
###### camel case : คำแรกเป็นตัวเล็กทั้งหมดคำต่อไปตัวอักษรแรกขึ้นด้วยตัวพิมพ์ใหญ่

## ประเภทและขนาดของข้อมูล
###### char 1 byte
###### int 4 byte
###### float 4 byte
###### double 8 byte
###### short & long เป็นการเก็บค่ามากกว่าหรือน้อยก่าประเภทของตัวแปรนั้นๆตามความหมายของชื่อ
###### signed เก็บค่าเครื่องหมายของตัวแปรนั้นๆ
###### unsignied เก็บแค่ค่าบวก

## ค่าคงทีตัวอักษร
###### \a alert character
###### \b backspace
###### \f formfeed
###### \n newline
###### \\ backslash

## puts
###### การใช้งานเหมือน printf แต่ puts เว้นบรรทัดให้เลยไม่เหมือน printf

## รับ input
###### 1. ใช้ getchar() 
###### ex. int c;
###### c = getchar()
###### 2. ใช้ scanf()
###### ex. int c;
###### scanf("%d", &c);

## Arrithmatic operators
###### สามารถดูตารางการใช้-การมาก่อนหลังได้ในชีทบรรยาย

## ++n , n++
###### 1. n++ คือการจบรอบก่อนแล้วค่อยเพิ่มค่า n
###### 2. ++n คือเพิ่มค่า n เลยตั้งแต่เริ่มรอบนั้น

## BITWISE operators
###### && and
###### || or
###### ^ exclusive or
###### << left shift
###### >> right shift

## if-else
###### การใช้งานเหมือน python โดยกำหนดเงื่อนไขหากตรงกับเงื่อนไขก็จะเข้า block ของ if นั้นๆ หากไม่เข้าเงื่อนไขก็จะเข้า block ของ else

## while loop
###### การใช้งานเหมือน python โดยกำหนดเงื่อนไขหากตรงกับเงื่อนไขก็จะวนลูปต่อไปเรื่อยๆและจะหยุดเมื่อไม่ตรงกับเงื่อนไข

## for loop
###### for( 1 ; 2 ; 3){}
###### 1. คือค่าเริ่มต้น
###### 2. หากตรงกับ 2 ให้วนลูปต่อไป
###### 3. ให้ทำ 3 ทุกครั้งที่จบการวนลูป 1 ครั้ง

## code และคำอธิบาย code รวมไปถึงวิธีการใช้ต่างๆ
###### #include <stdio.h> // for รับ printf scanf
###### #include <stdlib.h> // for แปลง

###### // void main() // function , 'void = return type'
###### // void = ไม่ return anything
###### // int = return integer
###### {
######     // function for 'input'
######         // รับทุกอย่างเป็น str. C มีแต่ Char array ไม่มี str.
######     //char str[10]; //char array size 10 ช่อง อาจเก็บได้เต็มที่8 ตัว cuz. รับ terminate ไปด้วย
######     //gets(str); // รับ input เข้า char array
######     // fgets(name, buffer, stdin = standard in อ่านจากที่อินพุตเข้า) ไว้รับ input 'size buffer = size char array' buffer = ที่ไว้รอข้อมูลเข้า
######     // ex. fgets(str, 10, stdin); รับ input ที่มีขนาดอักษร < 10 ตัว cuz. lines 10

######     // You should use shortcut key ; ctr. + s = save files.
    
######     //printf("input = %s" , str); // print

######     // c not have boollean
######     // int found = 0; 0 = false , 0.0 too
######     // int isExist = 1; เลขอื่นที่ไม่ใช่ 0 = True ,str ว่าง = True

######     // char = '\0' = 'ascii 0' It's empty str.
######     // char = ''; ไม่ใช่ str ว่าง

######     //จะ comment all ให้คลุมดำทั้งหมด แล้วกด ctr. + //

######     //if else (เงื่อนไข)
######     // {
######     //  คำสั่ง ;
######     // }
###### }

## การใช้คำสั่ง "git log --all --decorate --oneline --graph"
![This is an image for 4.](![Screenshot (458)](https://user-images.githubusercontent.com/98304929/151408633-a527e6a4-5617-42ad-aef7-c50584fe1006.png)
)

## LAB สัปดาห์ที่ 1

/*print hour min second ตามตัวแปร computer_time*/

#include<stdio.h>
void main() {
   int computer_time = 1678;  // ในโปรแกรมตรวจอาจเปลี่ยนค่าของตัวแปรนี้ แต่นิสิตไม่ต้องเปลี่ยนค่าของตัวแปรนี้
    int hour, day, minute, count = 0, i  =0; //กำหนดตัวแปรมารับค่า
    int x = 0, y = 0; //กำหนดตัวแปรเพื่อมาใช้คำนวน
    minute = computer_time % 60; //ให้ นาที = เวลาทั้งหมด หารเอาแต่เศษกับ 60
    x = computer_time / 60; //ให้ x มารับค่าที่เหลือจากการคิดเป็นนาที ซึ่งตอนนี้ x มีหน่วยเป็นชั่วโมง
    day = x / 24; //ให้ วัน = x หารด้วย 24 เนื่องจาก 1 วันมี 24 ชั่วโมง
    hour = x % 24; //คิดค่าชั่วโมงโดยเอา x หารเอาแต่เศษกับ 24
    printf("It is %d days %d hours and %d minutes.", day, hour, minute); //ปริ้นท์ค่าตามแบบฟอร์มที่โจทย์กำหนด
}

## LAB สัปดาห์ที่ 2

//สารวัตรนักเรียน

#include <stdio.h>
#include <stdlib.h>

int main()
{
  char level_str[4], year_str[4];
  int level, year;

  printf("school level of student: ");
  fgets(level_str, 4, stdin);

  printf("how many of learning: ");
  fgets(year_str, 4, stdin);

  level = atoi(level_str);
  year = atoi(year_str);

  if ((level > 3 && year > 0) || (level <= 3 && year > 3)) //ให้นักเรียนที่อยู่เกรด 4-6 และต้องเคยเรียนดนตรีมาก่อน หรือ นักเรียนที่อยู่เกรด 1-3 และต้องเคยเรียนดนตรีอย่างน้อย 4 ปีขึ้นไปถึงสามารถจองห้องได้
  {
     printf("YES");
  }
  else {
     printf("NO");
  }
}

## LAB สัปดาห์ที่ 3

//ไล่ค่าตัวเลข

#include <stdio.h>

void main()
{
    int x; //กำหนดตัวแปรเพื่อรับค่าเข้ามา
    scanf("%d", &x); //รับค่าเข้าตัวแปร x
    for (int i = x ; i >= 0 ; i--) //ตั้ง loop เพื่อปริ้นท์ค่าตั้งแต่ค่ารับเข้าจนถึง 0 โดยลดลงทีละ 1 เมื่อวนลูปเสร็จ 1 รอบ
    {
        printf("%d\n", i);
    }
}

## LAB สัปดาห์ที่ 4

// print star (2n-1)

#include <stdio.h>
#include <stdlib.h>

int main(){
    char a[5]; //กำหนดตัวแปร
    fgets(a, 5, stdin); //รับค่าเข้ามาในตัวแปร a
    int n, i, j; //กำหนดตัวแปร
    n = atoi(a);

    for (i = 1; i <= n; i++){ //วนลูป เพื่อพิมพ์ดาวช่วงแรกที่เพิ่มดาวขึ้นในแถวทีละหนึ่ง
        for (j = 1; j <= i; j++){
            printf("*");
        }
        printf("\n"); // พิมพ์ให้เว้นบรรทัด
    }

    for (i = n; i >= 1; i--){ //วนลูป เพื่อพิมพ์ดาวช่วงหลังที่ลดดาวลงในแถวทีละหนึ่ง
        for (j = 2; j <= i; ++j){
            printf("*");
        }
        printf("\n"); // พิมพ์ให้เว้นบรรทัด
    }
    return 0;
}

## LAB สัปดาห์ที่ 5

// Automorphic numbers

#include <stdio.h>
#include <stdlib.h>

int checknumber(long long n, long long power){ //สร้าง function เพื่อรับค่าเข้ามาเช็คตามเงื่อนไข
    while(n != 0){ เมื่อ n ไม่ใช่ 0
        if(n%10 != power%10){ 
            return 0; //false
        }
        n /= 10;
        power /= 10;
    }
    return 1; //true
}

int main(){ //function หลัก
    //input n
    char str_n[10];
    printf("Input n = "); //ปริ้นท์ค่าแรกเพื่อนำไปรับค่าเข้าในบรรทัดต่อมา
    fgets(str_n, sizeof(str_n), stdin); //รับค่าเข้า
    long long n = atoll(str_n); 
    //calculate power
    long long power = n*n;
    printf("n^2 = %lld\n", power); //ปริ้นท์บรรทัดที่ 2

    if(checknumber(n, power)){
        printf("Yes. %d is automorphic number.", n); //สร้างเงื่อนไขและใช้ฟังก์ชันด้านบนเพื่อเช็ค
    }
    else{
        printf("No. %d is not automorphic number.", n); //เมื่อไม่ตรงกับเงื่อนไขจะพิมพ์บรรทัดนี้
    }
}

## LAB สัปดาห์ที่ 6

//แปลงรูปแบบ 12-hour เป็น 24-hour

#include <stdio.h>
#include <ctype.h>

int main() {
    int h, m; //กำหนดตัวแปร
    char time; //กำหนดตัวแปร
    printf("Enter a 12-hour time [eg. 12:34 am]: "); //ปริ้นท์ค่าแรกเพื่อนำไปรับค่าเข้าในบรรทัดต่อมา
    scanf("%d:%d %c", &h, &m, &time); //รับค่าเข้า
    time = tolower(time); //ทำอักษรเป็นตัวเล็ก
    if (time == 'p')  //ตั้งเงื่อนไขเมื่อมีอักษร p
    {
        if (h == 12) //ถ้า h คือ 12
        {
            h = 12;
        }
        else //ถ้า h ไม่ใช่ 12
        {
            h += 12; //บวก 12 เพิ่มใน h
        }
        printf("Equivalent 24-hour time: %02d:%02d", h, m); //ปริ้นท์ค่าที่ได้คำนวนไว้
    }
    else  //ตั้งเงื่อนไขเมื่ออักษรไม่ใช่ p
    {
        if (h == 12) //ถ้า h คือ 12
        {
            h = 0; //ให้ h มีค่าเป็น 0
            printf("Equivalent 24-hour time: %02d:%02d", h, m); //ปริ้นท์ค่าที่ได้คำนวนไว้
        }
        else //ถ้า h ไม่ใช่ 12
        {
            printf("Equivalent 24-hour time: %02d:%02d", h, m); //ปริ้นท์ค่าที่ได้คำนวนไว้
        }
        
    }
}
